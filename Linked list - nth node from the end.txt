Linked list - nth node from the end


class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
def find_nth_from_end(head, n):
    if not head:
        return None
    slow = fast = head
    for i in range(n):
        if not fast:
            return None
        fast = fast.next
    while fast and fast.next:
        slow = slow.next
        fast = fast.next
    if not slow:
        return None
    return slow.data
def create_linked_list():
    head = None
    while True:
        value = int(input())
        if value < 0:
            break
        new_node = Node(value)
        new_node.next = head
        head = new_node
    return head
if __name__ == "__main__":
    head = create_linked_list()
    n = int(input())
    result = find_nth_from_end(head, n)
    if result is not None:
        print(f"{result} is the nth node element in the list")
    else:
        print("There is no nth node in the list")


OUTPUT:

Input (stdin)

1
2
3
4
-1
2
Your Output (stdout)

3 is the nth node element in the list
Expected Output

3 is the nth node element in the list
